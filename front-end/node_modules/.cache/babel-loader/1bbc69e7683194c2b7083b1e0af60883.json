{"ast":null,"code":"var _jsxFileName = \"/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport charmander from '../images/charmander.png'; //may need to change classNames to increase sizing of boxes or just one part?\n//Taking information from the user and setting that as currentUser (state)\n//Taking that information and updating our database - addingTrainer & Post request\n//catching the error if same email is added \n//flagging it to the user as well\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  //use this to navigate to login page\n  const navigate = useNavigate(); // set the state\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidInputWarning, setInvalidInputWarning] = useState(\"\");\n\n  const addTrainerToDb = async newTrainerDetails => {\n    // console.log(newTrainerDetails);\n    const trainer = await fetch(\"http://localhost:8080/trainer\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTrainerDetails)\n    }).then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        console.log(response);\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    }).catch(error => setInvalidInputWarning(\"User email is already in use\"));\n    return trainer;\n  }; //handle the user pressing the signup button\n\n\n  const handleSignupButton = async event => {\n    event.preventDefault();\n    setInvalidInputWarning(\"\"); //creating new trainer object to be passed onto the backend\n\n    const newTrainerDetails = {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password,\n      \"sprite_link\": \"replace with actual sprite link\"\n    }; // console.log(newTrainerDetails);\n\n    addTrainerToDb(newTrainerDetails);\n    navigate(\"/Login\");\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"post\",\n      className: \"signup-form\",\n      onSubmit: handleSignupButton,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"signup-inputs\",\n        placeholder: \"Choose username\",\n        onChange: handleNameChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"signup-inputs\",\n        placeholder: \"Enter email address\",\n        onChange: handleEmailChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"signup-inputs\",\n        placeholder: \"Password\",\n        onChange: handlePasswordChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"signup\",\n        id: \"signup-btn\",\n        className: \"btn signup-submit-btn\",\n        value: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: charmander,\n      alt: \"charmander\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"tW5GUbbz41AlMtCIApt72Lw+AJ8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Signup.js"],"names":["React","useState","useNavigate","charmander","Signup","navigate","name","setName","email","setEmail","password","setPassword","invalidInputWarning","setInvalidInputWarning","addTrainerToDb","newTrainerDetails","trainer","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","Error","statusText","catch","error","handleSignupButton","event","preventDefault","handleNameChange","target","value","handleEmailChange","handlePasswordChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport charmander from '../images/charmander.png';\n\n\n//may need to change classNames to increase sizing of boxes or just one part?\n\n\n//Taking information from the user and setting that as currentUser (state)\n//Taking that information and updating our database - addingTrainer & Post request\n//catching the error if same email is added \n//flagging it to the user as well\nexport default function Signup() {\n\n\n//use this to navigate to login page\nconst navigate = useNavigate();\n\n\n// set the state\nconst [name,setName]= useState(\"\");\nconst [email,setEmail] = useState(\"\");\nconst [password,setPassword]= useState(\"\");\nconst [invalidInputWarning, setInvalidInputWarning] = useState(\"\");\n\n\nconst addTrainerToDb = async (newTrainerDetails) => {\n  // console.log(newTrainerDetails);\n  const trainer = await fetch(\"http://localhost:8080/trainer\", {\n  method:\"POST\",\n  headers:{\n    'Content-Type':'application/json'\n  },\n  body: JSON.stringify(newTrainerDetails)\n  })\n  .then(response => {\n  if (response.status >= 200 && response.status <= 299) {\n    console.log(response);\n  } else {\n    console.log(response);\n    throw Error(response.statusText);\n  }\n  })\n  .catch(error => setInvalidInputWarning(\"User email is already in use\"))\n\n  return trainer;\n  }\n\n\n//handle the user pressing the signup button\n\n  const handleSignupButton = async (event) =>{\n    event.preventDefault();\n    setInvalidInputWarning(\"\")\n\n//creating new trainer object to be passed onto the backend\n    const newTrainerDetails = {\n      \"name\":name,\n      \"email\": email,\n      \"password\": password,\n      \"sprite_link\": \"replace with actual sprite link\"\n    }\n\n    // console.log(newTrainerDetails);\n    addTrainerToDb(newTrainerDetails);\n\n    navigate(\"/Login\");\n    \n  }\n\n  const handleNameChange = (event) =>{\n    setName(event.target.value);\n  }\n\n  const handleEmailChange = (event) =>{\n    setEmail(event.target.value);\n  }\n\n  const handlePasswordChange = (event) =>{\n    setPassword(event.target.value);\n  }\n\n\n  return (\n    \n    <div className='login-page'>\n      <h1>Sign up</h1>\n    \n      <form action=\"post\" className='signup-form' onSubmit={handleSignupButton}>      \n      <input type=\"text\" className=\"signup-inputs\" placeholder=\"Choose username\" onChange={handleNameChange}required></input>\n      <input type=\"email\" className=\"signup-inputs\" placeholder=\"Enter email address\" onChange={handleEmailChange}required></input>\n      <input type=\"password\" className=\"signup-inputs\" placeholder=\"Password\" onChange={handlePasswordChange}required></input>\n      {/* <input type=\"password\" className=\"signup-inputs\" placeholder=\"Confirm\" required></input> */}\n\n      {/* <p className=\"invalidText\">{invalidInputWarning}</p> */}\n      <input type=\"submit\" name=\"signup\" id=\"signup-btn\" className='btn signup-submit-btn' value=\"Sign up\"/>\n      </form>\n\n      <img src={charmander} alt=\"charmander\" />\n\n    </div>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}