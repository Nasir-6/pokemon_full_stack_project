{"ast":null,"code":"var _jsxFileName = \"/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport squirtle from '../images/squirtle.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    updateCurrentUser\n  } = _ref;\n  // NEED THIS TO USE NAVIGATE COMMAND\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidInputWarning, setInvalidInputWarning] = useState(\"\");\n\n  const getTrainerIfDetailsAreValid = async trainerDetails => {\n    const trainer = await fetch(\"http://localhost:8080/trainer/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(trainerDetails)\n    }).then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    }).catch(error => setInvalidInputWarning(\"Invalid Email or Password\"));\n    return trainer;\n  }; // Define logic for submit button press\n\n\n  const handleSubmitButton = async event => {\n    event.preventDefault();\n    setInvalidInputWarning(\"\"); // Now send email and password back to get checked by Java Backend\n    // create trainer details object to be passed back to backend\n\n    const trainerDetails = {\n      \"email\": email,\n      \"password\": password\n    };\n    const trainerInDb = await getTrainerIfDetailsAreValid(trainerDetails);\n    console.log(trainerInDb);\n\n    if (trainerInDb != undefined) {\n      updateCurrentUser({\n        id: trainerInDb.id,\n        name: trainerInDb.name,\n        sprite_link: trainerInDb.sprite_link\n      });\n      navigate(\"/pokedex\");\n    }\n  };\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"post\",\n      className: \"login-form\",\n      onSubmit: handleSubmitButton,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"login-inputs\",\n        placeholder: \"Enter email address\",\n        onChange: handleEmailChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"login-inputs\",\n        placeholder: \"Enter password\",\n        onChange: handlePasswordChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidText\",\n        children: invalidInputWarning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"login\",\n        id: \"login-btn\",\n        className: \"btn login-submit-btn\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: squirtle,\n      alt: \"spurtle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"v+oBTvcn2xwEeUFB38hEPFU24OA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Login.js"],"names":["React","useState","useNavigate","squirtle","Login","updateCurrentUser","navigate","email","setEmail","password","setPassword","invalidInputWarning","setInvalidInputWarning","getTrainerIfDetailsAreValid","trainerDetails","trainer","fetch","method","headers","body","JSON","stringify","then","response","status","json","console","log","Error","statusText","catch","error","handleSubmitButton","event","preventDefault","trainerInDb","undefined","id","name","sprite_link","handleEmailChange","target","value","handlePasswordChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport squirtle from '../images/squirtle.png';\n\n\nexport default function Login({updateCurrentUser}) {\n\n  // NEED THIS TO USE NAVIGATE COMMAND\n  const navigate = useNavigate();\n\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidInputWarning, setInvalidInputWarning] = useState(\"\");\n\n  const getTrainerIfDetailsAreValid = async (trainerDetails) => {\n    const trainer = await fetch(\"http://localhost:8080/trainer/login\",{\n      method:\"POST\",\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(trainerDetails)\n    })\n    .then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    })\n    .catch(error => setInvalidInputWarning(\"Invalid Email or Password\"))\n\n    return trainer;\n  }\n\n\n  \n  // Define logic for submit button press\n  const handleSubmitButton = async (event) => {\n    event.preventDefault();\n    setInvalidInputWarning(\"\")\n\n    // Now send email and password back to get checked by Java Backend\n    // create trainer details object to be passed back to backend\n    const trainerDetails = {\n      \"email\": email,\n      \"password\": password \n    }\n\n    const trainerInDb = await getTrainerIfDetailsAreValid(trainerDetails);\n    console.log(trainerInDb)\n\n    if(trainerInDb != undefined){\n      updateCurrentUser({\n        id: trainerInDb.id,\n        name: trainerInDb.name,\n        sprite_link: trainerInDb.sprite_link\n      })\n      navigate(\"/pokedex\");\n    }\n\n  }\n\n  const handleEmailChange = (event) =>{\n    setEmail(event.target.value);\n  }\n\n  const handlePasswordChange = (event) =>{\n    setPassword(event.target.value);\n  }\n\n\n\n  return (\n    <div className='login-page'>\n      <h1>Login</h1>\n\n      <form  action=\"post\" className='login-form' onSubmit={handleSubmitButton}>\n      <input type=\"email\"  className=\"login-inputs\" placeholder=\"Enter email address\" onChange={handleEmailChange} required></input>\n      <input type=\"password\"  className=\"login-inputs\" placeholder=\"Enter password\" onChange={handlePasswordChange} required></input>\n      <p className=\"invalidText\">{invalidInputWarning}</p>\n      <input type=\"submit\" name=\"login\" id=\"login-btn\" className='btn login-submit-btn' value=\"Login\"/>\n      </form>\n\n      <img src={squirtle} alt=\"spurtle\" />\n\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}