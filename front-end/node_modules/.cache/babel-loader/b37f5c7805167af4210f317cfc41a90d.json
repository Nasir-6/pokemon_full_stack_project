{"ast":null,"code":"import _asyncToGenerator from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect,useRef}from'react';import{Pokemon}from'../components/Pokemon';import{SERVER_URL}from'../Constants';import sadBulbasaur from'../images/sad_bulbasaur.png';import surprisedPikachu from'../images/surprised_pikachu.jpeg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Pokedex(_ref){var currentUser=_ref.currentUser;// Testing\n// console.log(currentUser.id);\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),userPokemon=_useState2[0],setUserPokemon=_useState2[1];var isMounted=useRef(false);var getPokemonList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(SERVER_URL,\"/pokemon/trainer/\").concat(currentUser.id)).then(function(response){if(response.status>=200&&response.status<=299){return response.json();}else{console.log(response);throw Error(response.statusText);}})// Setting the state with setUserPokemon\n.then(function(data){return setUserPokemon(data);})// When currentUser changes the useEffect runs\n.catch(function(error){console.log(error);setUserPokemon([]);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getPokemonList(){return _ref2.apply(this,arguments);};}();useEffect(function(){if(!isMounted.current&&currentUser!=\"\"){getPokemonList();isMounted.current=true;}// this return is only on cleanup - when you unmount component (i.e refreshing page)\nreturn function cleanup(){isMounted.current=false;};},[currentUser]);// Maybe useEffect on unmounting\n// useEffect running on prop change \n// Never have a useEffect on a propChange \n// delete button function\nvar deletePokemonFromDb=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pokemonId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(SERVER_URL,\"/pokemon/\").concat(pokemonId),{method:\"DELETE\"});case 2:// Update rendered list after delete\ngetPokemonList();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function deletePokemonFromDb(_x){return _ref3.apply(this,arguments);};}();// Data is within userPokemon and we want to map the array to display the pokemon\n// The rendered list will be in pokemonList\nvar pokemonList=[];pokemonList=userPokemon.map(function(pokemon){return/*#__PURE__*/ (// We need to make a component called Pokemon which has a singular pokemon\n// The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n_jsx(Pokemon,{pokemon:pokemon,releasePokemon:function releasePokemon(pokemonId){deletePokemonFromDb(pokemonId);}},pokemon.id));});// if(userPokemon != [] && isMounted.current){\n//   console.log('Mounted')\n//   console.log(isMounted.current);\n//   pokemonList = userPokemon.map((pokemon) => {\n//     return (\n//       // We need to make a component called Pokemon which has a singular pokemon\n//       // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n//       <Pokemon key={pokemon.id} pokemon={pokemon} releasePokemon ={(pokemonId) => {deletePokemonFromDb(pokemonId)}} />\n//     );\n//   });\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"pokedex-page\",children:currentUser==null?/*#__PURE__*/_jsxs(\"div\",{className:\"surprised-pikachu-page\",children:[/*#__PURE__*/_jsx(\"img\",{src:surprisedPikachu,alt:\"Image of surprised Pikachu\",className:\"surprised-pikachu\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You can't view your Pok\\xE9dex if you haven't logged in! Please login!\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pokedex-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\".concat(currentUser.name,\"'s Pok\\xE9dex\")}),/*#__PURE__*/_jsx(\"h2\",{children:\"Manage your Pok\\xE9mon team\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"all-pokemon-container\",children:pokemonList.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"sad-bulbasaur-page\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Your Pok\\xE9dex is empty, please go to the map to catch some Pok\\xE9mon! \"}),/*#__PURE__*/_jsx(\"img\",{src:sadBulbasaur,alt:\"Image of sad Bulbasaur\",className:\"sad-bulbasaur\"})]}):pokemonList})]})});}","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/src/pages/Pokedex.js"],"names":["useState","useEffect","useRef","Pokemon","SERVER_URL","sadBulbasaur","surprisedPikachu","Pokedex","currentUser","userPokemon","setUserPokemon","isMounted","getPokemonList","fetch","id","then","response","status","json","console","log","Error","statusText","data","catch","error","current","cleanup","deletePokemonFromDb","pokemonId","method","pokemonList","map","pokemon","name","length"],"mappings":"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","sourcesContent":["import { useState ,useEffect, useRef } from 'react';\nimport { Pokemon } from '../components/Pokemon';\nimport { SERVER_URL } from '../Constants';\nimport sadBulbasaur from '../images/sad_bulbasaur.png'\nimport surprisedPikachu from '../images/surprised_pikachu.jpeg'\n\nexport default function Pokedex({ currentUser }) {\n  // Testing\n  // console.log(currentUser.id);\n\n  const [userPokemon, setUserPokemon] = useState([]);\n\n  const isMounted = useRef(false);\n\n\n  const getPokemonList= async () => {\n    await fetch(`${SERVER_URL}/pokemon/trainer/${currentUser.id}`)\n    .then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    })\n    // Setting the state with setUserPokemon\n    .then((data) => setUserPokemon(data))\n  // When currentUser changes the useEffect runs\n  .catch(error => {\n    console.log(error);\n    setUserPokemon([])\n  })\n   }\n\n  useEffect(() => {\n    \n    if (!isMounted.current && currentUser!=\"\") {\n      getPokemonList();\n      isMounted.current = true;\n    }\n    // this return is only on cleanup - when you unmount component (i.e refreshing page)\n    return function cleanup(){isMounted.current = false}\n  }, [currentUser]);\n\n  // Maybe useEffect on unmounting\n\n  // useEffect running on prop change \n  // Never have a useEffect on a propChange \n // delete button function\n\n\n\n const deletePokemonFromDb = async (pokemonId) =>{\n  await fetch(`${SERVER_URL}/pokemon/${pokemonId}`,\n    {\n    method: \"DELETE\",\n  });\n  // Update rendered list after delete\n  getPokemonList();\n }\n\n\n\n\n  // Data is within userPokemon and we want to map the array to display the pokemon\n\n  // The rendered list will be in pokemonList\n  let pokemonList = [];\n\n  pokemonList = userPokemon.map((pokemon) => {\n    return (\n      // We need to make a component called Pokemon which has a singular pokemon\n      // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n\n      <Pokemon key={pokemon.id} pokemon={pokemon} releasePokemon={(pokemonId) => {deletePokemonFromDb(pokemonId); }}/>\n    );\n  });\n  \n  // if(userPokemon != [] && isMounted.current){\n  //   console.log('Mounted')\n  //   console.log(isMounted.current);\n    \n    \n  //   pokemonList = userPokemon.map((pokemon) => {\n  //     return (\n  //       // We need to make a component called Pokemon which has a singular pokemon\n  //       // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n  \n  //       <Pokemon key={pokemon.id} pokemon={pokemon} releasePokemon ={(pokemonId) => {deletePokemonFromDb(pokemonId)}} />\n  //     );\n  //   });\n  // }\n  \n\n  return (\n    <div className=\"pokedex-page\">\n      {currentUser==null ? (\n      <div className=\"surprised-pikachu-page\">\n        <img src={surprisedPikachu} alt={`Image of surprised Pikachu`} className=\"surprised-pikachu\" />\n        <p>You can't view your Pokédex if you haven't logged in! Please login!</p>\n      </div>\n      ) : (\n        <><div className=\"pokedex-header\">\n        {/* <h2>{`Hi ${currentUser.name}`}</h2> */}\n        <h1>{`${currentUser.name}'s Pokédex`}</h1>\n        {/* Change this to user's chosen trainer sprite */}\n        <h2>Manage your Pokémon team</h2>\n      </div>\n      <div className=\"all-pokemon-container\">\n        {/* pokemonList has the list of pokemon */}\n        {pokemonList.length === 0 ? ( \n        <div className='sad-bulbasaur-page'> \n        <p>Your Pokédex is empty, please go to the map to catch some Pokémon! </p>\n        <img src={sadBulbasaur} alt={`Image of sad Bulbasaur`} className=\"sad-bulbasaur\" />\n        </div>\n         ) : (pokemonList)}\n      </div>\n      </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}