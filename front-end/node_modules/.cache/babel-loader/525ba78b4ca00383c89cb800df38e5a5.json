{"ast":null,"code":"var _jsxFileName = \"/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Pokedex.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Pokemon } from '../components/Pokemon';\nimport sadBulbasaur from '../images/sad_bulbasaur.png';\nimport surprisedPikachu from '../images/surprised_pikachu.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pokedex(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  // Testing\n  // console.log(currentUser.id);\n  const [userPokemon, setUserPokemon] = useState([]);\n  const isMounted = useRef(false);\n\n  const getPokemonList = async () => {\n    await fetch(`http://localhost:8080/pokemon/trainer/${currentUser.id}`).then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    }) // Setting the state with setUserPokemon\n    .then(data => setUserPokemon(data)) // When currentUser changes the useEffect runs\n    .catch(error => {\n      console.log(error);\n      setUserPokemon([]);\n    });\n  };\n\n  useEffect(() => {\n    if (!isMounted.current && currentUser != \"\") {\n      getPokemonList();\n      isMounted.current = true;\n    } // this return is only on cleanup - when you unmount component (i.e refreshing page)\n\n\n    return function cleanup() {\n      isMounted.current = false;\n    };\n  }, [currentUser]); // Maybe useEffect on unmounting\n  // useEffect running on prop change \n  // Never have a useEffect on a propChange \n  // delete button function\n\n  const deletePokemonFromDb = async pokemonId => {\n    await fetch(`http://localhost:8080/pokemon/${pokemonId}`, {\n      method: \"DELETE\"\n    }); // Update rendered list after delete\n\n    getPokemonList();\n  }; // Data is within userPokemon and we want to map the array to display the pokemon\n  // The rendered list will be in pokemonList\n\n\n  let pokemonList = [];\n  pokemonList = userPokemon.map(pokemon => {\n    return (\n      /*#__PURE__*/\n      // We need to make a component called Pokemon which has a singular pokemon\n      // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n      _jsxDEV(Pokemon, {\n        pokemon: pokemon,\n        releasePokemon: pokemonId => {\n          deletePokemonFromDb(pokemonId);\n        }\n      }, pokemon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    );\n  }); // if(userPokemon != [] && isMounted.current){\n  //   console.log('Mounted')\n  //   console.log(isMounted.current);\n  //   pokemonList = userPokemon.map((pokemon) => {\n  //     return (\n  //       // We need to make a component called Pokemon which has a singular pokemon\n  //       // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n  //       <Pokemon key={pokemon.id} pokemon={pokemon} releasePokemon ={(pokemonId) => {deletePokemonFromDb(pokemonId)}} />\n  //     );\n  //   });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokedex-page\",\n    children: currentUser == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surprised-pikachu-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: surprisedPikachu,\n        alt: `Image of surprised Pikachu`,\n        className: \"surprised-pikachu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can't view your Pok\\xE9dex if you haven't logged in! Please login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokedex-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${currentUser.name}'s PokÃ©dex`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manage your Pok\\xE9mon team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-pokemon-container\",\n        children: pokemonList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sad-bulbasaur-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Pok\\xE9dex is empty, please go to the map to catch some Pok\\xE9mon! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sadBulbasaur,\n            alt: `Image of sad Bulbasaur`,\n            className: \"sad-bulbasaur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this) : pokemonList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokedex, \"n4S1Te3gDEvGEuVV3Ipfb2sj6b8=\");\n\n_c = Pokedex;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Pokedex.js"],"names":["useState","useEffect","useRef","Pokemon","sadBulbasaur","surprisedPikachu","Pokedex","currentUser","userPokemon","setUserPokemon","isMounted","getPokemonList","fetch","id","then","response","status","json","console","log","Error","statusText","data","catch","error","current","cleanup","deletePokemonFromDb","pokemonId","method","pokemonList","map","pokemon","name","length"],"mappings":"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","sourcesContent":["import { useState ,useEffect, useRef } from 'react';\nimport { Pokemon } from '../components/Pokemon';\nimport sadBulbasaur from '../images/sad_bulbasaur.png'\nimport surprisedPikachu from '../images/surprised_pikachu.jpeg'\n\nexport default function Pokedex({ currentUser }) {\n  // Testing\n  // console.log(currentUser.id);\n\n  const [userPokemon, setUserPokemon] = useState([]);\n\n  const isMounted = useRef(false);\n\n\n  const getPokemonList= async () => {\n    await fetch(`http://localhost:8080/pokemon/trainer/${currentUser.id}`)\n    .then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    })\n    // Setting the state with setUserPokemon\n    .then((data) => setUserPokemon(data))\n  // When currentUser changes the useEffect runs\n  .catch(error => {\n    console.log(error);\n    setUserPokemon([])\n  })\n   }\n\n  useEffect(() => {\n    \n    if (!isMounted.current && currentUser!=\"\") {\n      getPokemonList();\n      isMounted.current = true;\n    }\n    // this return is only on cleanup - when you unmount component (i.e refreshing page)\n    return function cleanup(){isMounted.current = false}\n  }, [currentUser]);\n\n  // Maybe useEffect on unmounting\n\n  // useEffect running on prop change \n  // Never have a useEffect on a propChange \n // delete button function\n\n\n\n const deletePokemonFromDb = async (pokemonId) =>{\n  await fetch(`http://localhost:8080/pokemon/${pokemonId}`,\n    {\n    method: \"DELETE\",\n  });\n  // Update rendered list after delete\n  getPokemonList();\n }\n\n\n\n\n  // Data is within userPokemon and we want to map the array to display the pokemon\n\n  // The rendered list will be in pokemonList\n  let pokemonList = [];\n\n  pokemonList = userPokemon.map((pokemon) => {\n    return (\n      // We need to make a component called Pokemon which has a singular pokemon\n      // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n\n      <Pokemon key={pokemon.id} pokemon={pokemon} releasePokemon={(pokemonId) => {deletePokemonFromDb(pokemonId); }}/>\n    );\n  });\n  \n  // if(userPokemon != [] && isMounted.current){\n  //   console.log('Mounted')\n  //   console.log(isMounted.current);\n    \n    \n  //   pokemonList = userPokemon.map((pokemon) => {\n  //     return (\n  //       // We need to make a component called Pokemon which has a singular pokemon\n  //       // The details are passes down as a prop to the pokemon component and the details are stored in the pokemon variable\n  \n  //       <Pokemon key={pokemon.id} pokemon={pokemon} releasePokemon ={(pokemonId) => {deletePokemonFromDb(pokemonId)}} />\n  //     );\n  //   });\n  // }\n  \n\n  return (\n    <div className=\"pokedex-page\">\n      {currentUser==null ? (\n      <div className=\"surprised-pikachu-page\">\n        <img src={surprisedPikachu} alt={`Image of surprised Pikachu`} className=\"surprised-pikachu\" />\n        <p>You can't view your PokÃ©dex if you haven't logged in! Please login!</p>\n      </div>\n      ) : (\n        <><div className=\"pokedex-header\">\n        {/* <h2>{`Hi ${currentUser.name}`}</h2> */}\n        <h1>{`${currentUser.name}'s PokÃ©dex`}</h1>\n        {/* Change this to user's chosen trainer sprite */}\n        <h2>Manage your PokÃ©mon team</h2>\n      </div>\n      <div className=\"all-pokemon-container\">\n        {/* pokemonList has the list of pokemon */}\n        {pokemonList.length === 0 ? ( \n        <div className='sad-bulbasaur-page'> \n        <p>Your PokÃ©dex is empty, please go to the map to catch some PokÃ©mon! </p>\n        <img src={sadBulbasaur} alt={`Image of sad Bulbasaur`} className=\"sad-bulbasaur\" />\n        </div>\n         ) : (pokemonList)}\n      </div>\n      </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}