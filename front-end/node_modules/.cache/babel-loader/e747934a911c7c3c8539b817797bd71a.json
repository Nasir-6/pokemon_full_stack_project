{"ast":null,"code":"import _asyncToGenerator from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/regenerator/index.js\";import React from'react';import{useState}from'react';import{useNavigate}from'react-router-dom';import squirtle from'../images/squirtle.png';import{SERVER_URL}from'../Constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(_ref){var updateCurrentUser=_ref.updateCurrentUser;// NEED THIS TO USE NAVIGATE COMMAND\nvar navigate=useNavigate();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),invalidInputWarning=_useState6[0],setInvalidInputWarning=_useState6[1];var getTrainerIfDetailsAreValid=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(trainerDetails){var trainer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(SERVER_URL+\"/trainer/login\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(trainerDetails)}).then(function(response){if(response.status>=200&&response.status<=299){return response.json();}else{console.log(response);throw Error(response.statusText);}}).catch(function(error){return setInvalidInputWarning(\"Invalid Email or Password\");});case 2:trainer=_context.sent;return _context.abrupt(\"return\",trainer);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getTrainerIfDetailsAreValid(_x){return _ref2.apply(this,arguments);};}();// Define logic for submit button press\nvar handleSubmitButton=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var trainerDetails,trainerInDb;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();setInvalidInputWarning(\"\");// Now send email and password back to get checked by Java Backend\n// create trainer details object to be passed back to backend\ntrainerDetails={\"email\":email,\"password\":password};_context2.next=5;return getTrainerIfDetailsAreValid(trainerDetails);case 5:trainerInDb=_context2.sent;console.log(trainerInDb);if(trainerInDb!=undefined){updateCurrentUser({id:trainerInDb.id,name:trainerInDb.name,sprite_link:trainerInDb.sprite_link});navigate(\"/pokedex\");}case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmitButton(_x2){return _ref3.apply(this,arguments);};}();var handleEmailChange=function handleEmailChange(event){setEmail(event.target.value);};var handlePasswordChange=function handlePasswordChange(event){setPassword(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{action:\"post\",className:\"login-form\",onSubmit:handleSubmitButton,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"login-inputs\",placeholder:\"Enter email address\",onChange:handleEmailChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"login-inputs\",placeholder:\"Enter password\",onChange:handlePasswordChange,required:true}),/*#__PURE__*/_jsx(\"p\",{className:\"invalidText\",children:invalidInputWarning}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",name:\"login\",id:\"login-btn\",className:\"btn login-submit-btn\",value:\"Login\"})]}),/*#__PURE__*/_jsx(\"img\",{src:squirtle,alt:\"spurtle\"})]});}","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/src/pages/Login.js"],"names":["React","useState","useNavigate","squirtle","SERVER_URL","Login","updateCurrentUser","navigate","email","setEmail","password","setPassword","invalidInputWarning","setInvalidInputWarning","getTrainerIfDetailsAreValid","trainerDetails","fetch","method","headers","body","JSON","stringify","then","response","status","json","console","log","Error","statusText","catch","error","trainer","handleSubmitButton","event","preventDefault","trainerInDb","undefined","id","name","sprite_link","handleEmailChange","target","value","handlePasswordChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport squirtle from '../images/squirtle.png';\nimport { SERVER_URL } from '../Constants';\n\n\nexport default function Login({updateCurrentUser}) {\n\n  // NEED THIS TO USE NAVIGATE COMMAND\n  const navigate = useNavigate();\n\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidInputWarning, setInvalidInputWarning] = useState(\"\");\n\n  const getTrainerIfDetailsAreValid = async (trainerDetails) => {\n    const trainer = await fetch(SERVER_URL + \"/trainer/login\",{\n      method:\"POST\",\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(trainerDetails)\n    })\n    .then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    })\n    .catch(error => setInvalidInputWarning(\"Invalid Email or Password\"))\n\n    return trainer;\n  }\n\n\n  \n  // Define logic for submit button press\n  const handleSubmitButton = async (event) => {\n    event.preventDefault();\n    setInvalidInputWarning(\"\")\n\n    // Now send email and password back to get checked by Java Backend\n    // create trainer details object to be passed back to backend\n    const trainerDetails = {\n      \"email\": email,\n      \"password\": password \n    }\n\n    const trainerInDb = await getTrainerIfDetailsAreValid(trainerDetails);\n    console.log(trainerInDb)\n\n    if(trainerInDb != undefined){\n      updateCurrentUser({\n        id: trainerInDb.id,\n        name: trainerInDb.name,\n        sprite_link: trainerInDb.sprite_link\n      })\n      navigate(\"/pokedex\");\n    }\n\n  }\n\n  const handleEmailChange = (event) =>{\n    setEmail(event.target.value);\n  }\n\n  const handlePasswordChange = (event) =>{\n    setPassword(event.target.value);\n  }\n\n\n\n  return (\n    <div className='login-page'>\n      <h1>Login</h1>\n\n      <form  action=\"post\" className='login-form' onSubmit={handleSubmitButton}>\n      <input type=\"text\"  className=\"login-inputs\" placeholder=\"Enter email address\" onChange={handleEmailChange} required></input>\n      <input type=\"password\"  className=\"login-inputs\" placeholder=\"Enter password\" onChange={handlePasswordChange} required></input>\n      <p className=\"invalidText\">{invalidInputWarning}</p>\n      <input type=\"submit\" name=\"login\" id=\"login-btn\" className='btn login-submit-btn' value=\"Login\"/>\n      </form>\n\n      <img src={squirtle} alt=\"spurtle\" />\n\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}