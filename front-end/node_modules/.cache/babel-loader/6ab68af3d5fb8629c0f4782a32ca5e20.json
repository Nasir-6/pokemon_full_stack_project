{"ast":null,"code":"import _asyncToGenerator from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/node_modules/@babel/runtime/regenerator/index.js\";import React from'react';import{useState}from'react';import{useNavigate}from'react-router-dom';import{SERVER_URL}from'../Constants';import charmander from'../images/charmander.png';//may need to change classNames to increase sizing of boxes or just one part?\n//Taking information from the user and setting that as currentUser (state)\n//Taking that information and updating our database - addingTrainer & Post request\n//catching the error if same email is added \n//flagging it to the user as well\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Signup(){//use this to navigate to login page\nvar navigate=useNavigate();// set the state\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),invalidInputWarning=_useState8[0],setInvalidInputWarning=_useState8[1];var addTrainerToDb=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(newTrainerDetails){var trainer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(SERVER_URL+\"/trainer\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(newTrainerDetails)}).then(function(response){if(response.status>=200&&response.status<=299){console.log(response);}else{console.log(response);throw Error(response.statusText);}}).catch(function(error){return setInvalidInputWarning(\"User email is already in use\");});case 2:trainer=_context.sent;return _context.abrupt(\"return\",trainer);case 4:case\"end\":return _context.stop();}}},_callee);}));return function addTrainerToDb(_x){return _ref.apply(this,arguments);};}();//handle the user pressing the signup button\nvar handleSignupButton=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var newTrainerDetails;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();setInvalidInputWarning(\"\");//creating new trainer object to be passed onto the backend\nnewTrainerDetails={\"name\":name,\"email\":email,\"password\":password,\"sprite_link\":\"replace with actual sprite link\"};// console.log(newTrainerDetails);\naddTrainerToDb(newTrainerDetails);navigate(\"/Login\");case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSignupButton(_x2){return _ref2.apply(this,arguments);};}();var handleNameChange=function handleNameChange(event){setName(event.target.value);};var handleEmailChange=function handleEmailChange(event){setEmail(event.target.value);};var handlePasswordChange=function handlePasswordChange(event){setPassword(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign up\"}),/*#__PURE__*/_jsxs(\"form\",{action:\"post\",className:\"signup-form\",onSubmit:handleSignupButton,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"signup-inputs\",placeholder:\"Choose username\",onChange:handleNameChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"signup-inputs\",placeholder:\"Enter valid email address\",onChange:handleEmailChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"signup-inputs\",placeholder:\"Password\",onChange:handlePasswordChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",name:\"signup\",id:\"signup-btn\",className:\"btn signup-submit-btn\",value:\"Sign up\"})]}),/*#__PURE__*/_jsx(\"img\",{src:charmander,alt:\"charmander\"})]});}","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/src/pages/Signup.js"],"names":["React","useState","useNavigate","SERVER_URL","charmander","Signup","navigate","name","setName","email","setEmail","password","setPassword","invalidInputWarning","setInvalidInputWarning","addTrainerToDb","newTrainerDetails","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","Error","statusText","catch","error","trainer","handleSignupButton","event","preventDefault","handleNameChange","target","value","handleEmailChange","handlePasswordChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport { SERVER_URL } from '../Constants';\nimport charmander from '../images/charmander.png';\n\n\n//may need to change classNames to increase sizing of boxes or just one part?\n\n\n//Taking information from the user and setting that as currentUser (state)\n//Taking that information and updating our database - addingTrainer & Post request\n//catching the error if same email is added \n//flagging it to the user as well\nexport default function Signup() {\n\n\n//use this to navigate to login page\nconst navigate = useNavigate();\n\n\n// set the state\nconst [name,setName]= useState(\"\");\nconst [email,setEmail] = useState(\"\");\nconst [password,setPassword]= useState(\"\");\nconst [invalidInputWarning, setInvalidInputWarning] = useState(\"\");\n\n\nconst addTrainerToDb = async (newTrainerDetails) => {\n  // console.log(newTrainerDetails);\n  const trainer = await fetch(SERVER_URL + \"/trainer\", {\n  method:\"POST\",\n  headers:{\n    'Content-Type':'application/json'\n  },\n  body: JSON.stringify(newTrainerDetails)\n  })\n  .then(response => {\n  if (response.status >= 200 && response.status <= 299) {\n    console.log(response);\n  } else {\n    console.log(response);\n    throw Error(response.statusText);\n  }\n  })\n  .catch(error => setInvalidInputWarning(\"User email is already in use\"))\n\n  return trainer;\n  }\n\n\n//handle the user pressing the signup button\n\n  const handleSignupButton = async (event) =>{\n    event.preventDefault();\n    setInvalidInputWarning(\"\")\n\n//creating new trainer object to be passed onto the backend\n    const newTrainerDetails = {\n      \"name\":name,\n      \"email\": email,\n      \"password\": password,\n      \"sprite_link\": \"replace with actual sprite link\"\n    }\n\n    // console.log(newTrainerDetails);\n    addTrainerToDb(newTrainerDetails);\n\n    navigate(\"/Login\");\n    \n  }\n\n  const handleNameChange = (event) =>{\n    setName(event.target.value);\n  }\n\n  const handleEmailChange = (event) =>{\n    setEmail(event.target.value);\n  }\n\n  const handlePasswordChange = (event) =>{\n    setPassword(event.target.value);\n  }\n\n\n  return (\n    \n    <div className='login-page'>\n      <h1>Sign up</h1>\n    \n      <form action=\"post\" className='signup-form' onSubmit={handleSignupButton}>      \n      <input type=\"text\" className=\"signup-inputs\" placeholder=\"Choose username\" onChange={handleNameChange}required></input>\n      <input type=\"text\" className=\"signup-inputs\" placeholder=\"Enter valid email address\" onChange={handleEmailChange}required></input>\n      <input type=\"password\" className=\"signup-inputs\" placeholder=\"Password\" onChange={handlePasswordChange}required></input>\n      {/* <input type=\"password\" className=\"signup-inputs\" placeholder=\"Confirm\" required></input> */}\n\n      {/* <p className=\"invalidText\">{invalidInputWarning}</p> */}\n      <input type=\"submit\" name=\"signup\" id=\"signup-btn\" className='btn signup-submit-btn' value=\"Sign up\"/>\n      </form>\n\n      <img src={charmander} alt=\"charmander\" />\n\n    </div>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}