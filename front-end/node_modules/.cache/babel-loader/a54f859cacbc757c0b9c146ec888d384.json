{"ast":null,"code":"var _jsxFileName = \"/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Map.js\",\n    _s = $RefreshSig$();\n\nimport userSprite from \"../images/ashSprite.png\";\nimport { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faArrowLeft, faArrowUp, faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\nimport surprisedPikachu from '../images/surprised_pikachu.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Map(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [userPosition, setUserPostion] = useState(10);\n  const [isPokemonCaught, setIsPokemonCaught] = useState(false);\n  let gridIndexes = []; // This array will have indexes from 1-GridLength^2 e.g [1,2,3, .... 98, 99, 100] - this is made via the for loop below\n\n  const GRIDLENGTH = 32;\n\n  for (let i = 1; i <= GRIDLENGTH ** 2; i++) {\n    gridIndexes.push(i);\n  }\n\n  const grids = gridIndexes.map(index => {\n    if (index == userPosition) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `oneGrid user-grid`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `oneGrid`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n  });\n\n  const moveRight = () => {\n    const isOnRightEdge = userPosition % GRIDLENGTH == 0;\n\n    if (!isOnRightEdge) {\n      setUserPostion(userPosition + 1);\n    } else {\n      console.log('User is on the right edge');\n    }\n  };\n\n  const moveLeft = () => {\n    const isOnLeftEdge = userPosition % GRIDLENGTH == 1;\n\n    if (!isOnLeftEdge) {\n      setUserPostion(userPosition - 1);\n    } else {\n      console.log('User is on the left edge');\n    }\n  };\n\n  const moveUp = () => {\n    const isOnTopEdge = userPosition > 0 && userPosition <= GRIDLENGTH;\n\n    if (!isOnTopEdge) {\n      setUserPostion(userPosition - GRIDLENGTH);\n    } else {\n      console.log('User is on the top edge');\n    }\n  };\n\n  const moveDown = () => {\n    const isOnBottomEdge = userPosition > GRIDLENGTH * (GRIDLENGTH - 1) && userPosition <= GRIDLENGTH ** 2;\n\n    if (!isOnBottomEdge) {\n      setUserPostion(userPosition + GRIDLENGTH);\n    } else {\n      console.log('User is on the bottom edge');\n    }\n  }; // =============== WILD POKEMON GENERATOR CODE =================\n  // UseEffect for running ilPokenmonID - when userPosition changes \n\n\n  const [wildPokemon, setWildPokemon] = useState({\n    trainer_id: null,\n    name: null,\n    pokeapi_id: null,\n    sprite_link: null,\n    hp: null,\n    level: null\n  });\n  const [wildPokemonId, setWildPokemonId] = useState(1);\n  const [foundWildPokemon, setFoundWildPokemon] = useState(true); // fetch a pokemon and console.log the url\n\n  const grabPokemon = async () => {\n    const newPokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${wildPokemonId}/`).then(response => response.json());\n    let randomLevel = Math.floor(Math.random() * 90) + 5; // use Slice and upperCase to make first letter UpperCase\n\n    setWildPokemon({\n      trainer_id: currentUser.id,\n      name: newPokemon.name.charAt(0).toUpperCase() + newPokemon.name.slice(1),\n      pokeapi_id: wildPokemonId,\n      sprite_link: newPokemon.sprites.front_default,\n      hp: randomLevel * 13,\n      level: randomLevel\n    });\n  };\n\n  useEffect(() => {\n    grabPokemon();\n  }, [wildPokemonId]); // Run above useEffect on mount aswell as when wildPokemonId changes state (i.e grabSprite when wildPokemonId change )\n  // Function to generate wildPokemonId (between 1 and 493)\n\n  const wildPokemonIdGenerator = () => {\n    //generate probability \n    const wildPokemonProbability = Math.random();\n\n    if (wildPokemonProbability >= 0.6) {\n      // if more than 0.6 - set to found and also set id - \n      setWildPokemonId(Math.floor(Math.random() * 493) + 1);\n      setFoundWildPokemon(true);\n    } else if (wildPokemonProbability < 0.6) {\n      setWildPokemon({\n        trainer_id: currentUser.id,\n        name: null,\n        pokeapi_id: null,\n        sprite_link: null,\n        hp: null,\n        level: null\n      }); // set to null so previous pokemon not shown!!\n\n      setFoundWildPokemon(false);\n    }\n  };\n\n  useEffect(() => {\n    wildPokemonIdGenerator();\n    setIsPokemonCaught(false);\n  }, [userPosition]);\n\n  const addPokemonToDb = async () => {\n    const result = await fetch(\"http://localhost:8080/pokemon\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(wildPokemon)\n    }).then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        setIsPokemonCaught(true);\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    }).catch(error => console.log(error));\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: currentUser == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surprised-pikachu-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: surprisedPikachu,\n        alt: `Image of surprised Pikachu`,\n        className: \"surprised-pikachu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can't catch Pok\\xE9mon if you haven't logged in! Please login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: grids\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves-container\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowUp,\n          onClick: moveUp,\n          className: \"btn up-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowRight,\n          onClick: moveRight,\n          className: \"btn right-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowDown,\n          onClick: moveDown,\n          className: \"btn down-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          onClick: moveLeft,\n          className: \"btn left-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userSprite,\n          alt: \"User sprite\",\n          className: \"user-sprite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wild-pokemon-container\",\n        children: foundWildPokemon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: wildPokemon.sprite_link,\n            alt: \"\",\n            className: \"wildPokemon-sprite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `A wild ${wildPokemon.name} appeared.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Level: ${wildPokemon.level}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), isPokemonCaught ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `The wild ${wildPokemon.name} has been captured.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: addPokemonToDb,\n            children: \"Catch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No wild pokemon found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"+INdYzx5OnDXlBnUKhbs2Y2DINc=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/front-end/src/pages/Map.js"],"names":["userSprite","useEffect","useState","FontAwesomeIcon","faArrowRight","faArrowLeft","faArrowUp","faArrowDown","surprisedPikachu","Map","currentUser","userPosition","setUserPostion","isPokemonCaught","setIsPokemonCaught","gridIndexes","GRIDLENGTH","i","push","grids","map","index","moveRight","isOnRightEdge","console","log","moveLeft","isOnLeftEdge","moveUp","isOnTopEdge","moveDown","isOnBottomEdge","wildPokemon","setWildPokemon","trainer_id","name","pokeapi_id","sprite_link","hp","level","wildPokemonId","setWildPokemonId","foundWildPokemon","setFoundWildPokemon","grabPokemon","newPokemon","fetch","then","response","json","randomLevel","Math","floor","random","id","charAt","toUpperCase","slice","sprites","front_default","wildPokemonIdGenerator","wildPokemonProbability","addPokemonToDb","result","method","headers","body","JSON","stringify","status","Error","statusText","catch","error"],"mappings":"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","sourcesContent":["import userSprite from \"../images/ashSprite.png\";\nimport { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faArrowRight, faArrowLeft, faArrowUp, faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\nimport surprisedPikachu from '../images/surprised_pikachu.jpeg'\n\n\n\nexport default function Map({currentUser}) {\n\n  const [userPosition, setUserPostion] = useState(10);\n  const [isPokemonCaught, setIsPokemonCaught] = useState(false);\n\n  let gridIndexes = []; \n  // This array will have indexes from 1-GridLength^2 e.g [1,2,3, .... 98, 99, 100] - this is made via the for loop below\n  const GRIDLENGTH = 32;\n  for (let i = 1; i <= GRIDLENGTH ** 2; i++) {\n    gridIndexes.push(i);\n  }\n\n  const grids = gridIndexes.map((index) => {\n    if (index == userPosition) {\n      return <div className={`oneGrid user-grid`}></div>;\n    } else {\n      return <div className={`oneGrid`}></div>;\n    }\n  });\n\n  const moveRight = () => {\n    \n    const isOnRightEdge = (userPosition%GRIDLENGTH == 0)\n    if(!isOnRightEdge){\n      setUserPostion(userPosition+1)\n    } else{\n      console.log('User is on the right edge');\n    }\n  }\n\n  const moveLeft = () => {\n    const isOnLeftEdge = (userPosition%GRIDLENGTH == 1)\n    if(!isOnLeftEdge){\n      setUserPostion(userPosition-1)\n    } else{\n      console.log('User is on the left edge');\n    }\n  }\n\n  const moveUp = () => {\n    const isOnTopEdge = (userPosition>0 && userPosition<=GRIDLENGTH)\n    if(!isOnTopEdge){\n      setUserPostion(userPosition-GRIDLENGTH)\n    } else{\n      console.log('User is on the top edge');\n    }\n    \n  }\n\n  const moveDown = () => {\n    const isOnBottomEdge = (userPosition>(GRIDLENGTH*(GRIDLENGTH-1)) && userPosition<=GRIDLENGTH**2)\n    if(!isOnBottomEdge){\n      setUserPostion(userPosition+GRIDLENGTH)\n    } else{\n      console.log('User is on the bottom edge');\n    }\n    \n  }\n\n\n  // =============== WILD POKEMON GENERATOR CODE =================\n\n  // UseEffect for running ilPokenmonID - when userPosition changes \n  const [wildPokemon, setWildPokemon] = useState({\n    trainer_id: null,\n    name: null,\n    pokeapi_id: null,\n    sprite_link: null,\n    hp: null,\n    level: null\n  });\n  const [wildPokemonId, setWildPokemonId] = useState(1);\n  const [foundWildPokemon, setFoundWildPokemon] = useState(true);\n\n  // fetch a pokemon and console.log the url\n\n  const grabPokemon = async () => {\n    const newPokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${wildPokemonId}/`)\n    .then(response => response.json())\n\n    let randomLevel = Math.floor(Math.random() * 90) + 5\n\n    // use Slice and upperCase to make first letter UpperCase\n    setWildPokemon({\n      trainer_id: currentUser.id,\n      name: newPokemon.name.charAt(0).toUpperCase() + newPokemon.name.slice(1),\n      pokeapi_id: wildPokemonId,\n      sprite_link: newPokemon.sprites.front_default,\n      hp: randomLevel*13,\n      level: randomLevel\n    });\n}\n\n  useEffect(()=>{\n      grabPokemon();\n  },[wildPokemonId])\n  // Run above useEffect on mount aswell as when wildPokemonId changes state (i.e grabSprite when wildPokemonId change )\n\n  // Function to generate wildPokemonId (between 1 and 493)\n  const wildPokemonIdGenerator = () => {\n\n      //generate probability \n      const wildPokemonProbability = Math.random();\n      if(wildPokemonProbability >= 0.6){\n          // if more than 0.6 - set to found and also set id - \n          setWildPokemonId(Math.floor(Math.random() * 493) + 1);\n          setFoundWildPokemon(true)\n          \n      } else if(wildPokemonProbability < 0.6){\n          setWildPokemon({\n            trainer_id: currentUser.id,\n            name: null,\n            pokeapi_id: null,\n            sprite_link: null,\n            hp: null,\n            level: null\n          }); // set to null so previous pokemon not shown!!\n          setFoundWildPokemon(false)\n      }  \n  }\n\n\n\n  useEffect(()=>{\n    wildPokemonIdGenerator();\n    setIsPokemonCaught(false);\n  }, [userPosition])\n\n\n  const addPokemonToDb = async () => {\n    const result = await fetch(\"http://localhost:8080/pokemon\",{\n      method:\"POST\",\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(wildPokemon)\n    })\n    .then(response => {\n      if (response.status >= 200 && response.status <= 299) {\n        setIsPokemonCaught(true)\n        return response.json();\n      } else {\n        console.log(response);\n        throw Error(response.statusText);\n      }\n    })\n    .catch(error => console.log(error))\n\n    console.log(result);\n    \n  }\n\n\n\n\n\n\n\n  return (\n    <div className=\"map-page\">\n      {currentUser == null ? (\n        <div className=\"surprised-pikachu-page\">\n          <img src={surprisedPikachu} alt={`Image of surprised Pikachu`} className=\"surprised-pikachu\" />\n          <p>You can't catch Pokémon if you haven't logged in! Please login!</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"grid-container\">{grids}</div>\n\n          <div className=\"moves-container\">\n            <FontAwesomeIcon\n              icon={faArrowUp}\n              onClick={moveUp}\n              className=\"btn up-btn\"\n            />\n            <FontAwesomeIcon\n              icon={faArrowRight}\n              onClick={moveRight}\n              className=\"btn right-btn\"\n            />\n            <FontAwesomeIcon\n              icon={faArrowDown}\n              onClick={moveDown}\n              className=\"btn down-btn\"\n            />\n            <FontAwesomeIcon\n              icon={faArrowLeft}\n              onClick={moveLeft}\n              className=\"btn left-btn\"\n            />\n            <img src={userSprite} alt=\"User sprite\" className=\"user-sprite\" />\n          </div>\n\n          <div className=\"wild-pokemon-container\">\n            {foundWildPokemon ? (\n              <>\n                <img\n                  src={wildPokemon.sprite_link}\n                  alt=\"\"\n                  className=\"wildPokemon-sprite\"\n                />\n                <p>{`A wild ${wildPokemon.name} appeared.`}</p>\n                <p>{`Level: ${wildPokemon.level}`}</p>\n                {isPokemonCaught ? \n                <p>{`The wild ${wildPokemon.name} has been captured.`}</p> \n                :\n                <button className=\"btn\" onClick={addPokemonToDb}>Catch</button>\n                }\n              </>\n            ) : (\n              <p>No wild pokemon found</p>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}