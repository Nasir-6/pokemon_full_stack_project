{"ast":null,"code":"var _jsxFileName = \"/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './containers/Navbar';\nimport Footer from './containers/Footer';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Map from './pages/Map';\nimport Signup from './pages/Signup';\nimport Pokedex from './pages/Pokedex';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SERVER_URL } from './Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log(SERVER_URL);\n  const [currentUser, setCurrentUser] = useState(\"\"); //Store the currentUser in sessionStorage everytime it changes\n\n  useEffect(() => {\n    // If statement prevents overwriting the sessionStorage on refresh with empty string \"\"\n    // whilst also allowing logged out (null user) information to be stored in sessionStorage\n    // Keeping track of both logged in/out user states\n    if (currentUser != \"\") {\n      sessionStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n    }\n  }, [currentUser]); // USECONTEXT!!! - designed for handling a logged in user! - have state without need for propdrilling!\n  // context is declared as a component - but could use wherever\n  // Redux - managing state - but not for login - used for updating lots of state, - need to design app ahead of time for redux\n  // On mount (when Refreshed) retrieve the currentUser stored in sessionStorage \n\n  useEffect(() => {\n    // First grab from sessionStorage - Parse into a object as stored as a string in sessionStorage\n    const currentUserInSessionStorage = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n    console.log(currentUserInSessionStorage);\n    setCurrentUser(currentUserInSessionStorage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          currentUser: currentUser,\n          updateCurrentUser: update => setCurrentUser(update)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              currentUser: currentUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              updateCurrentUser: update => setCurrentUser(update)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/map\",\n            element: /*#__PURE__*/_jsxDEV(Map, {\n              currentUser: currentUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/pokedex\",\n            element: /*#__PURE__*/_jsxDEV(Pokedex, {\n              currentUser: currentUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tuAxtzNbxRVlLjNnCR0FADkPD3s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nasir/coding/pokemon_full_stack_project/pokemon-back-end/src/front-end/src/App.js"],"names":["Navbar","Footer","Home","Login","Map","Signup","Pokedex","BrowserRouter","Router","Route","Routes","useState","useEffect","SERVER_URL","App","console","log","currentUser","setCurrentUser","sessionStorage","setItem","JSON","stringify","currentUserInSessionStorage","parse","getItem","update"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport Navbar from './containers/Navbar';\nimport Footer from './containers/Footer';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Map from './pages/Map';\nimport Signup from './pages/Signup';\nimport Pokedex from './pages/Pokedex';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { useState, useEffect } from 'react';\nimport { SERVER_URL } from './Constants';\n\n\nfunction App() {\n\n  console.log(SERVER_URL)\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  //Store the currentUser in sessionStorage everytime it changes\n  useEffect(()=>{\n    // If statement prevents overwriting the sessionStorage on refresh with empty string \"\"\n    // whilst also allowing logged out (null user) information to be stored in sessionStorage\n    // Keeping track of both logged in/out user states\n    if(currentUser != \"\"){\n      sessionStorage.setItem(\"currentUser\", JSON.stringify(currentUser))\n    }\n  }, [currentUser])\n\n  // USECONTEXT!!! - designed for handling a logged in user! - have state without need for propdrilling!\n  // context is declared as a component - but could use wherever\n  // Redux - managing state - but not for login - used for updating lots of state, - need to design app ahead of time for redux\n  \n\n  // On mount (when Refreshed) retrieve the currentUser stored in sessionStorage \n  useEffect(()=>{\n    // First grab from sessionStorage - Parse into a object as stored as a string in sessionStorage\n    const currentUserInSessionStorage = JSON.parse(sessionStorage.getItem(\"currentUser\"))\n    console.log(currentUserInSessionStorage)\n    setCurrentUser(currentUserInSessionStorage)\n  }, [])\n\n\n\n\n  return (\n    <Router>\n      <div className=\"background-overlay\">\n        <div className=\"app\">\n          <Navbar currentUser={currentUser} updateCurrentUser={(update)=> setCurrentUser(update)}/>\n          \n\n          <Routes>\n            <Route exact path=\"/\" element={<Home currentUser={currentUser} />} />\n            <Route exact path=\"/login\" element={<Login updateCurrentUser={(update)=> setCurrentUser(update)} />}/>\n            <Route exact path=\"/signup\" element={<Signup />} />\n            <Route exact path=\"/map\" element={<Map currentUser={currentUser}/>} />\n            <Route exact path=\"/pokedex\" element={<Pokedex currentUser={currentUser}/>} />\n          </Routes>\n\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}